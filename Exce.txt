Exercise1: Declare a linked list

            Please add the following items to the list:
            Add 'Avatar' as the first item in the list.
            Create a LinkedListNode<string> named titanic with the value 'Titanic' and add it to the last position in the list.
            Add 'Star Wars: The Force Awakens after 'Titanic' using the 'titanic` node as an anchor.
             
             
Exercise2:
		Please remove the following items from the list:

		1-Remove the value C-3PO from the list.
		2-Find the node for R2-D2 and then remove it from the list.
		3-Remove the last item from the list.


		LinkedList<string> droids = new LinkedList<string>();

       		droids.AddLast("C-3PO");
        		droids.AddLast("AZI-3");
       		droids.AddLast("R2-D2");
       		droids.AddLast("IG-88");
        		droids.AddLast("2-1B");

Exercise3:
	In Our KFS implementation Make method to insertAfter and insertBefore  (giving it the node  you want to insert after or before and giving it data int)
	Ex  KFS.InsertAfter(node,20)  
	you can get the node from FIND  if user insert the value of node not (node it self) make the function as you wish 
	what i need is to be able to insert after or before a certain node.
	
	Hint:Use node.next  or node.pervious to add the node after or before , then make sure every other pointer is set to it's logical  order
	ex
	1 3 4
	insert(2,node(1))
	temp=1.next()  which is 3  or null if it last
	1.next(node(2)) 
	2.next=temp  
	2.pervious=node(1)
	
	Delete method will help you in this task


Again Remember that:
A LinkedList<T> is a specialized collection, 
which only outshines List<T> in the case where you are performing random insertions or removals from the middle of the listâ€”and even then, only maybe.

So  You as Studient  keep learn about Different types of data stuctures  at the end of course you will know what is good for what task and what it generally good and so on
don't worry about selecting the best Data Structure now.
		